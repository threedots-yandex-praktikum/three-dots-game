name: CI/CD

on:
  push:
    branches: ["main", "sprint_9", "git-hub-actions"]
  pull_request:
    branches: ["main", "sprint_9", "git-hub-actions"]

  workflow_dispatch:

jobs:
#  dev:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        node-version: [16.14.2]
#    steps:
#      - name: Set up GitHub Actions
#        uses: actions/checkout@v2
#      - name: Set up node ${{matrix.node-version}}
#        uses: actions/setup-node@v2
#        with:
#          node-version: ${{matrix.node-version}}
#      - name: instal deps
#        run: npm ci --legacy-peer-deps
#      - name: lint
#        run: npm run lint
#      - name: test
#        run: npm run test

  build:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16.14.2"
      - name: Install npm dependencies
        run: npm ci --legacy-peer-deps

      - name: cp env file
        run: cp .env-example .env

      - name: test comand
        run: echo "this is a line" >> file.txt
#
#      - name: Run build task
#        run: npm run build --if-present

#        run: docker-compose up -d

      - name: Deploy to server
        uses: easingthemes/ssh-deploy@main
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
          ARGS: "-rltgoDzvO --delete"
          SOURCE: "."
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          EXCLUDE: "/dist/, /node_modules/"
